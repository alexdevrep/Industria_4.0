#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// PROGRAM PALETIZADOR
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,INICIO)
  __DECLARE_VAR(BOOL,PARO)
  __DECLARE_VAR(BOOL,MOTOR_CINTA_HORIZONTAL)
  __DECLARE_VAR(BOOL,MOTOR_CINTA_INCLINADO)
  __DECLARE_VAR(BOOL,MOTOR_CINTA_PALETIZADOR)
  __DECLARE_VAR(BOOL,CONTADOR_CAJAS)
  __DECLARE_VAR(BOOL,PISTON_1)
  __DECLARE_VAR(BOOL,SENSOR_PISTON_1)
  CTU CTU0;
  __DECLARE_VAR(BOOL,PISTON_COMPUERTA)
  __DECLARE_VAR(BOOL,SENSOR_PISTON_COMPUERTA)
  __DECLARE_VAR(BOOL,COMPUERTA)
  __DECLARE_VAR(BOOL,SENSOR_COMPUERTA)
  CTU CTU1;
  __DECLARE_VAR(BOOL,GENERADOR_CAJAS)
  TON TON0;
  __DECLARE_VAR(TIME,RETARDO)
  __DECLARE_VAR(BOOL,CINTA_PALE0)
  __DECLARE_VAR(BOOL,CINTA_PALE1)
  __DECLARE_VAR(BOOL,GENERADOR_PALES)
  __DECLARE_VAR(BOOL,CINTA_PALETIZADOR)
  __DECLARE_VAR(BOOL,SENSOR_PALE_0)
  __DECLARE_VAR(BOOL,SENSOR_PALE_1)
  __DECLARE_VAR(BOOL,LIMITE_ALTURA)
  __DECLARE_VAR(BOOL,SUBIR_PALE)
  __DECLARE_VAR(BOOL,BAJAR_PALE)
  TOF TOF0;
  TOF TOF1;
  TON TON1;
  __DECLARE_VAR(BOOL,SENSOR_PALES)
  __DECLARE_VAR(BOOL,SENSOR_ASCENSOR)
  CTU CTU2;
  TON TON2;
  __DECLARE_VAR(BOOL,SENSOR_BAJADA)
  TON TON3;
  TOF TOF2;
  TON TON4;
  R_TRIG R_TRIG1;
  R_TRIG R_TRIG2;
  R_TRIG R_TRIG3;
  R_TRIG R_TRIG4;
  R_TRIG R_TRIG5;
  R_TRIG R_TRIG6;
  R_TRIG R_TRIG7;
  R_TRIG R_TRIG8;
  R_TRIG R_TRIG9;
  R_TRIG R_TRIG10;

} PALETIZADOR;

void PALETIZADOR_init__(PALETIZADOR *data__, BOOL retain);
// Code part
void PALETIZADOR_body__(PALETIZADOR *data__);
#endif //__POUS_H
